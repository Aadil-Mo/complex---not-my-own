/* === MODERN & COMPLEX CSS FOR LUMINA ATLAS (No changes needed from previous modern version) === */

/* --- Basic Reset & Root Variables --- */
*, *::before, *::after { box-sizing: border-box; margin: 0; padding: 0; }

:root {
    /* Color Palette (Dark, Atmospheric, No Brights) - Using standard CSS variables */
    --color-background: #02040a;
    --color-background-alt: #0a0f1a;
    --color-text: #b0c4de;
    --color-muted: #465a7a;
    --color-border: color-mix(in srgb, var(--color-muted), transparent 75%); /* Modern color mix */
    --glow-primary: #4f9fcf;
    --glow-secondary: #3aa05f;
    --glow-tertiary: #8a4fbf;
    --glow-white: rgba(200, 215, 230, 0.8);
    --color-shadow: color-mix(in srgb, var(--glow-primary), transparent 80%);
    --font-primary: 'Poppins', sans-serif;
    --font-headings: 'Poppins', sans-serif;
    --unit: 1rem;
    --fast: 0.3s;
    --medium: 0.6s;
    --slow: 1s;
    --ease-out-expo: cubic-bezier(0.16, 1, 0.3, 1);
    --ease-in-out-cubic: cubic-bezier(0.65, 0, 0.35, 1);
    --perspective: 1200px;
    --card-tilt: 8deg;
    --border-glow-size: 5px;
    --border-glow-spread: 15px;
    /* Modern Fluid Typography using clamp() */
    --font-size-h1: clamp(2.5rem, 5vw + 1rem, 3.5rem);
    --font-size-card-h3: clamp(1.4rem, 3vw + 0.5rem, 1.7rem);
    --padding-card: clamp(1rem, 2vw + 0.5rem, 1.5rem);
}

/* --- Base Styles --- */
html { scroll-behavior: smooth; font-size: 100%; }
body {
    font-family: var(--font-primary);
    background: linear-gradient(170deg, var(--color-background-alt) 0%, var(--color-background) 30%);
    color: var(--color-text);
    line-height: 1.7; overflow-x: hidden; min-height: 100vh;
    display: flex; flex-direction: column;
}
#main-content { flex-grow: 1; }

/* --- Loading Indicator --- */
.loading-indicator { position: fixed; inset: 0; background-color: rgba(2, 4, 10, 0.98);
    display: grid; place-items: center; /* Modern centering */
    z-index: 1000; transition: opacity var(--medium) var(--ease-out-expo); }
.loading-indicator.hidden { opacity: 0; pointer-events: none; }
.spinner { position: relative; width: 60px; height: 60px; }
.spinner-layer { position: absolute; inset: 0; border-radius: 50%; border: 3px solid transparent;
    animation: spin-layered 1.8s var(--ease-in-out-cubic) infinite; }
.spinner-layer:nth-child(1) { border-top-color: var(--glow-primary); animation-delay: -0.6s; }
.spinner-layer:nth-child(2) { border-inline-color: var(--glow-secondary); animation-delay: -0.3s; } /* Logical property */
.spinner-layer:nth-child(3) { border-bottom-color: var(--glow-tertiary); }
@keyframes spin-layered { 50% { transform: rotate(180deg) scale(0.9); } 100% { transform: rotate(360deg); } }
.loading-indicator p { margin-block-start: var(--unit); /* Logical property */ color: var(--glow-primary); font-weight: 600; letter-spacing: 1px; }

/* --- Particle Background --- */
.particle-container { position: fixed; inset: 0; z-index: -1; pointer-events: none; overflow: hidden; will-change: transform; }
.particle { position: absolute; border-radius: 50%; opacity: 0;
    animation: drift linear infinite; /* Animation timing set inline */
    will-change: transform, opacity;
    background-color: var(--glow-primary); box-shadow: 0 0 8px 0px var(--glow-primary);
    width: 3px; height: 3px;
}
@keyframes drift { /* Standard keyframes for drift */
    0% { transform: translateY(10vh) translateX(var(--x-drift-start, 0px)); opacity: var(--start-opacity, 0); }
    100% { transform: translateY(-110vh) translateX(var(--x-drift-end, 0px)); opacity: 0; }
}

/* --- Header --- */
.site-header { padding-block: calc(var(--unit) * 2.5); padding-inline: calc(var(--unit) * 1.5); /* Logical properties */
    text-align: center; position: relative; z-index: 10;
    background: linear-gradient(180deg, rgba(2, 4, 10, 0.6) 0%, rgba(2, 4, 10, 0) 100%); }
.site-header h1 { font-family: var(--font-headings); font-weight: 700; color: var(--glow-white);
    font-size: var(--font-size-h1); /* Fluid font size */
    margin-bottom: calc(var(--unit) * 0.5);
    text-shadow: 0 0 8px var(--glow-white), 0 0 20px var(--glow-primary), 0 0 35px var(--glow-primary);
    letter-spacing: 1.5px; animation: subtle-flicker 15s linear infinite alternate; }
@keyframes subtle-flicker {
    50% { opacity: 0.95; text-shadow: 0 0 6px var(--glow-white), 0 0 18px var(--glow-primary), 0 0 30px var(--glow-primary); }
}
.tagline { font-size: 1.1rem; color: var(--color-text); margin-bottom: calc(var(--unit) * 2); font-weight: 300; opacity: 0.9; }
#filter-nav { margin-top: var(--unit); }
#filter-nav button { background: transparent; border: 1px solid var(--color-border); color: var(--color-text);
    padding: 0.6em 1.3em; margin: 0.3em 0.5em; cursor: pointer; border-radius: 20px;
    font-weight: 600; position: relative; overflow: hidden; z-index: 1;
    transition: all var(--fast) var(--ease-in-out-cubic); }
#filter-nav button::before { content: ''; position: absolute; inset: 0; border-radius: 20px;
    background: linear-gradient(45deg, var(--glow-primary), var(--glow-secondary));
    opacity: 0; z-index: -1; transform: scale(1.2);
    transition: all var(--medium) var(--ease-out-expo); }
/* Modern :is() selector for hover/focus */
#filter-nav button:is(:hover, :focus) {
    border-color: transparent; color: var(--color-background);
    transform: translateY(-3px); box-shadow: 0 5px 15px var(--color-shadow); outline: none; }
#filter-nav button:is(:hover, :focus)::before { opacity: 1; transform: scale(1); }
#filter-nav button.active { border-color: var(--glow-primary); color: var(--color-background); background-color: var(--glow-primary);
    box-shadow: 0 0 15px var(--glow-primary); }
#filter-nav button.active::before { opacity: 0; }

/* --- Atlas Grid & CSS Filtering --- */
.atlas-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: calc(var(--unit) * 3); padding: calc(var(--unit) * 3); max-width: 1900px;
    margin-inline: auto; /* Logical property */ position: relative; z-index: 5; perspective: var(--perspective);
    transition: height var(--medium) var(--ease-in-out-cubic); /* May have limited effect */
}
/* CSS Filtering Logic (Using modern attribute selectors) */
.organism-card { animation: filter-in var(--medium) var(--ease-out-expo) forwards; } /* Default entry */
/* Hide non-matching cards using animation */
.atlas-grid[data-active-filter="deep-sea"] .organism-card:not([data-category="deep-sea"]),
.atlas-grid[data-active-filter="terrestrial"] .organism-card:not([data-category="terrestrial"]),
.atlas-grid[data-active-filter="fungal"] .organism-card:not([data-category="fungal"]) {
    animation: filter-out var(--medium) var(--ease-out-expo) forwards;
    pointer-events: none;
}
@keyframes filter-out {
    0% { opacity: 1; transform: scale(1); max-height: 500px; /* Estimate max height */}
    100% { opacity: 0; transform: scale(0.8); max-height: 0; padding: 0; margin: 0; border: 0; overflow: hidden;}
}
@keyframes filter-in { /* Optional simple fade-in for cards that become visible */
    from { opacity: 0; transform: scale(0.8);}
    to { opacity: 1; transform: scale(1);}
}

/* --- Organism Card - Modern Complex Styling --- */
.organism-card {
    position: relative; color: var(--color-text); transform-style: preserve-3d; z-index: 1;
    /* Initial state for scroll animation */
    opacity: 0; transform: translateY(30px) scale(0.98);
    transition: opacity var(--slow) var(--ease-out-expo), transform var(--slow) var(--ease-out-expo);
    will-change: opacity, transform;
    /* Set via JS */
    /* animation: none; */
}
.organism-card[data-animated="true"] { /* State when animated in */
    opacity: 1; transform: translateY(0px) scale(1);
}
/* Inner wrapper */
.card-inner { position: relative; width: 100%; height: 100%;
    background: linear-gradient(155deg, rgba(15, 25, 45, 0.7), rgba(30, 40, 60, 0.7));
    border-radius: 15px; border: 1px solid var(--color-border); transform-style: preserve-3d;
    transition: transform var(--medium) var(--ease-out-expo), box-shadow var(--medium) var(--ease-out-expo);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.4), 0 1px 3px rgba(0,0,0,0.2);
    cursor: pointer; overflow: hidden; }
/* Use :is() for hover/focus */
.organism-card:is(:hover, :focus-within) .card-inner {
    transform: rotateY(calc(var(--card-tilt) * 0.5)) rotateX(calc(var(--card-tilt) * -0.3)) translateZ(30px); /* Example fixed tilt */
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.5), 0 0 25px var(--color-shadow);
}
/* Card Image Wrapper & Effects */
.card-image-wrapper { position: relative; height: 240px; overflow: hidden; border-radius: 15px 15px 0 0;
    transform: translateZ(20px); /* Bring image slightly forward */
    /* Standard mask with prefix for compatibility */
    mask-image: linear-gradient(to bottom, black 80%, transparent 100%);
    -webkit-mask-image: linear-gradient(to bottom, black 80%, transparent 100%);
}
.card-image-wrapper img { display: block; width: 100%; height: 100%; object-fit: cover;
    border-radius: 15px 15px 0 0;
    transition: transform var(--medium) var(--ease-out-expo), filter var(--medium) var(--ease-out-expo);
    filter: brightness(0.85) saturate(1.1) contrast(1.05); }
.organism-card:is(:hover, :focus-within) .card-image-wrapper img {
    transform: scale(1.15); filter: brightness(1) saturate(1.2) contrast(1.1); }
/* Overlay effect */
.card-image-wrapper::after { content: ''; position: absolute; inset: 0;
    background: linear-gradient(180deg, transparent 50%, rgba(2, 4, 10, 0.8) 100%);
    mix-blend-mode: multiply; transition: opacity var(--fast) linear; opacity: 0.8; }
.organism-card:is(:hover, :focus-within) .card-image-wrapper::after { opacity: 0.5; }

/* Card Content Styling */
.card-content { padding: var(--padding-card); /* Fluid padding */ transform: translateZ(10px); text-align: center; }
.card-content h3 { font-family: var(--font-headings); font-weight: 700;
    font-size: var(--font-size-card-h3); /* Fluid font size */
    color: var(--glow-secondary); margin-bottom: calc(var(--unit) * 0.8);
    text-shadow: 0 0 6px var(--glow-secondary), 0 0 10px color-mix(in srgb, var(--glow-secondary), transparent 50%);
    transition: color var(--fast) ease-in-out, text-shadow var(--fast) ease-in-out; }
.organism-card:is(:hover, :focus-within) .card-content h3 { color: var(--glow-primary);
    text-shadow: 0 0 8px var(--glow-primary), 0 0 15px color-mix(in srgb, var(--glow-primary), transparent 40%); }
.card-content p { font-size: 0.95rem; line-height: 1.5; font-weight: 300; color: var(--color-text); opacity: 0.9; }

/* Complex Border/Glow Effect using Pseudo-elements */
.card-inner::before, .card-glow-border::before { /* Simplified selector */
    content: ''; position: absolute; border-radius: 15px; pointer-events: none;
    transition: all var(--medium) var(--ease-out-expo); z-index: -1; }
/* Inner gradient border */
.card-inner::before { inset: -1px; border: 1px solid transparent;
    background: linear-gradient(145deg, var(--glow-primary), var(--glow-secondary)) border-box;
    /* Standard mask properties with prefix */
    mask: linear-gradient(#fff 0 0) padding-box, linear-gradient(#fff 0 0);
    -webkit-mask: linear-gradient(#fff 0 0) padding-box, linear-gradient(#fff 0 0);
    mask-composite: exclude; -webkit-mask-composite: source-out; /* Use standard/prefix */
    opacity: 0; }
/* Outer glow effect */
.card-glow-border { position: absolute; inset: 0; border-radius: 15px; overflow: hidden; z-index: -2; }
.card-glow-border::before { inset: calc(var(--border-glow-size) * -1);
    background: radial-gradient(circle, transparent 60%, var(--glow-primary) 100%);
    filter: blur(var(--border-glow-spread)); opacity: 0; transform: scale(0.8); }
/* Reveal borders/glows on hover/focus */
.organism-card:is(:hover, :focus-within) .card-inner::before { opacity: 0.6; }
.organism-card:is(:hover, :focus-within) .card-glow-border::before { opacity: 0.4; transform: scale(1); }

/* --- Modal Styling - Modern Standards --- */
.modal-container { position: fixed; inset: 0; background-color: rgba(2, 4, 10, 0.8);
    display: grid; place-items: center; /* Modern centering */
    padding: var(--unit); z-index: 100; opacity: 0; pointer-events: none;
    /* Standard backdrop-filter with prefix */
    backdrop-filter: blur(10px) saturate(130%) brightness(0.8);
    -webkit-backdrop-filter: blur(10px) saturate(130%) brightness(0.8);
    transition: opacity var(--medium) var(--ease-in-out-cubic); }
.modal-container.is-visible { opacity: 1; pointer-events: auto; }
/* Dialog wrapper for animation */
.modal-dialog { width: 90%; max-width: 900px; max-height: 90vh; display: flex;
    transform: scale(0.8) rotateX(-20deg); opacity: 0;
    transition: transform var(--medium) var(--ease-out-expo) 0.1s, opacity var(--medium) var(--ease-out-expo) 0.1s; /* Added delay */
    will-change: transform, opacity; }
.modal-container.is-visible .modal-dialog { transform: scale(1) rotateX(0deg); opacity: 1; }
/* Modal content styling */
.modal-content { background: linear-gradient(170deg, var(--color-background-alt), var(--color-background));
    border-radius: 10px; border: 1px solid var(--color-border);
    box-shadow: 0 15px 50px rgba(0, 0, 0, 0.5), 0 0 30px var(--color-shadow);
    padding: calc(var(--unit) * 2.5); position: relative; overflow-y: auto; width: 100%;
    /* Standard scrollbar styling */
    scrollbar-width: thin; scrollbar-color: var(--glow-primary) var(--color-background); }
.modal-content::-webkit-scrollbar { width: 8px; }
.modal-content::-webkit-scrollbar-track { background: var(--color-background); border-radius: 4px; }
.modal-content::-webkit-scrollbar-thumb { background-color: var(--glow-primary); border-radius: 4px; border: 2px solid var(--color-background); }
.modal-content::-webkit-scrollbar-thumb:hover { background-color: var(--glow-secondary); }
/* Close Button */
.modal-close-btn { position: absolute; top: calc(var(--unit) * 1); inset-inline-end: calc(var(--unit) * 1); /* Logical property */
    background: none; border: none; cursor: pointer; width: 40px; height: 40px; padding: 0; z-index: 10; }
.modal-close-btn span { display: block; position: absolute; width: 24px; height: 2px;
    background-color: var(--color-muted); border-radius: 1px; top: 50%; left: 50%; transform: translate(-50%, -50%) rotate(var(--rotate, 45deg)); /* Use variable */
    transition: background-color var(--fast) ease, transform var(--fast) ease; }
.modal-close-btn span:last-child { --rotate: -45deg; }
.modal-close-btn:is(:hover, :focus) span { background-color: var(--glow-primary); --rotate: 0deg !important; /* Override rotation */ }
.modal-close-btn:is(:hover, :focus) span:first-child { transform: translate(-50%, calc(-50% - 3px)) rotate(10deg); } /* Slight separation */
.modal-close-btn:is(:hover, :focus) span:last-child { transform: translate(-50%, calc(-50% + 3px)) rotate(-10deg); }
.modal-close-btn:focus { outline: 2px solid var(--glow-primary); outline-offset: 2px; } /* Visible focus */

/* Modal Content Elements */
#modal-title { font-family: var(--font-headings); font-weight: 700;
    font-size: clamp(1.8rem, 4vw + 1rem, 2.5rem); /* Fluid title */
    color: var(--glow-primary); text-align: center; margin-bottom: var(--unit);
    text-shadow: 0 0 10px var(--glow-primary), 0 0 20px var(--color-shadow); }
.modal-image-container { position: relative; margin-bottom: calc(var(--unit) * 1.5); text-align: center; }
#modal-image { max-width: 100%; height: auto; max-height: 50vh; object-fit: contain; display: inline-block; border-radius: 8px;
    box-shadow: 0 5px 20px rgba(0,0,0,0.3); border: 1px solid var(--color-border); }
/* Embedded SVG for interaction */
.interactive-svg { position: absolute; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none;
    opacity: 0; transition: opacity var(--fast) ease; overflow: visible; }
.modal-content[data-interactive-id="anglerfish"] #anglerfish-lure-svg { opacity: 1; /* animation: pulse-lure 2s infinite alternate; */ }
@keyframes pulse-lure { /* Standard animation */
    from { filter: brightness(1) url(#lure-glow) drop-shadow(0 0 5px var(--glow-primary)); }
    to { filter: brightness(1.2) url(#lure-glow) drop-shadow(0 0 10px var(--glow-primary)); } }
#anglerfish-lure-svg path { pointer-events: auto; cursor: help; } /* Example cursor */

#modal-description { margin-bottom: calc(var(--unit) * 2); font-weight: 300; font-size: 1.05rem; text-align: justify; hyphens: auto; /* Nicer text justification */}
#modal-facts { border-top: 1px solid var(--color-border); padding-top: calc(var(--unit) * 1.5); }
#modal-facts ul { list-style: none; padding: 0; }
#modal-facts li { margin-bottom: calc(var(--unit) * 0.8); padding-inline-start: calc(var(--unit) * 1.5); /* Logical property */
    position: relative; font-size: 0.95rem; }
#modal-facts li::before { content: ''; position: absolute; inset-inline-start: 0; /* Logical property */ top: calc(0.85em - 4px);
    width: 8px; height: 8px; border-radius: 50%; background-color: var(--glow-secondary);
    box-shadow: 0 0 5px var(--glow-secondary); }
#modal-facts li strong { color: var(--glow-primary); font-weight: 600; margin-inline-end: 0.5em; /* Logical property */ }

/* --- Footer --- */
.site-footer { text-align: center; padding-block: calc(var(--unit) * 2.5); padding-inline: calc(var(--unit) * 1.5); /* Logical properties */
    margin-block-start: calc(var(--unit) * 3); /* Logical property */
    border-top: 1px solid var(--color-border); font-size: 0.85rem; color: var(--color-muted); opacity: 0.7; }

/* --- Responsiveness - Using Modern Techniques --- */
@media (max-width: 1200px) {
    .atlas-grid { grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); gap: calc(var(--unit) * 2); }
    :root { --perspective: 1000px; }
}
@media (max-width: 768px) {
    :root { --unit: 0.9rem; } /* Adjust base unit for smaller screens */
    .atlas-grid { padding: var(--unit); grid-template-columns: repeat(auto-fit, minmax(260px, 1fr)); }
    .card-image-wrapper { height: 200px; }
    .modal-dialog { width: 95%; }
    /* Disable 3D tilt on mobile for usability/performance */
    .organism-card:is(:hover, :focus-within) .card-inner { transform: translateZ(5px); }
}
@media (max-width: 480px) {
     #filter-nav button { padding: 0.5em 1em; margin: 0.2em 0.3em; font-size: 0.9rem;}
     #modal-description { font-size: 0.95rem; hyphens: none; } /* Disable hyphens on small screens if needed */
     #modal-facts li { font-size: 0.9rem; }
}
